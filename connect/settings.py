"""
Django settings for myclub_website project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os 

# CA certificates
import certifi
REQUESTS_CA_BUNDLE = certifi.where()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# settings.py

MEDIA_URL = '/media/'  # URL to serve media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')   # Absolute filesystem path to the media directory

TEMPLATES_DIR = BASE_DIR / 'templates'
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p6hcec2g4e#lgm6i7s76q%e(#fnaa)zz$2umpq!d3pjtonjhk0'


CRISPY_TEMPLATE_PACK = 'bootstrap4'
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# settings.py
EMAIL_USE_TLS = True 
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_FROM = 'python.100class@gmail.com'
EMAIL_HOST_USER = 'python.100class@gmail.com'
EMAIL_HOST_PASSWORD = 'mcohudsnozezjekv'
EMAIL_PORT = 587




PASSWORD_RESET_TIMEOUT = 900 #YOU HAVE 5 MINUTE TO TO USE THE PASSWORD 

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'daphne',
    'channels',
    'chat_app',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'events',
    'accounts',
    'venue',
    'reservation',
    
   
]

#channel setting
# Use the channels layer as the default backend for Django's ASGI interface


# Configure channels layer

# Configure Django to use ASGI for the application
# Use the built-in ASGI server for development (daphne or other ASGI servers for production)
 
 

WSGI_APPLICATION = 'connect.wsgi.application'
ASGI_APPLICATION = 'connect.asgi.application'
# ASGI_APPLICATION = 'myclub_website.asgi.routing.application'

# CHANNEL_LAYERS = {
#     "default": {
#         # "BACKEND": "channels_redis.core.RedisChannelLayer",
#         # "CONFIG": {
#         #     "hosts": [("127.0.0.1", 6379)],
 
#         # },
#         "BACKEND": "channels.layers.InMemoryChannelLayer"
#     },
# }
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',  # Use in-memory layer for simplicity
    },
}

# Allow WebSocket protocol upgrade
# Replace with appropriate CORS settings in a production environment
CORS_ALLOW_ALL_ORIGINS = True


#end of chennel setting

AUTH_USER_MODEL = 'accounts.CustomUser' 
 

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'connect.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]



# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    # 'content/static',
]

STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_cdn")

CRISPY_TEMPLATE_PACK = 'bootstrap4'  # You can choose other template packs as well


LOGIN_REDIRECT_URL = 'events:list-events'
LOGOUT_REDIRECT_URL = 'accounts:login'
 
AUTHENTICATION_BACKENDS = [
    'accounts.backends.EmailBackend'  # Replace with the actual path to your EmailBackend
    # 'django.contrib.auth.backends.ModelBackend',  # The default backend
]

#Rechaptcha work agains bot, that create fake accounts 
# RECAPTCHA_PUBLIC_KEY = '6LfE4xgoAAAAAGJ2Ge_VwMQkCb4_ngQjkCgORwn_'
# RECAPTCHA_PRIVATE_KEY = '6LfE4xgoAAAAAAX2QCqB4Iic3cexnHW_HtGFj1gU'
# SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']
# RECAPTCHA_DOMAIN = 'www.google.com'


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
